<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAID68h91IgcwHw9CBwAAAABJRU5ErkJggg==
</value>
  </data>
</root>